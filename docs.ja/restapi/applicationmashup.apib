FORMAT: 1A
HOST: https://mashup.lab.fiware.org/
TITLE: FIWARE Application Mashup RESTful v2.2 Specification
DATE: 16th October 2017
VERSION: v2.2
PREVIOUS_VERSION: v2.1
APIARY_PROJECT: fiwareapplicationmashup
SPEC_URL: http://wirecloud.github.io/wirecloud/restapi/
GITHUB_SOURCE: https://github.com/Wirecloud/wirecloud.git


# FIWARE Application Mashup RESTful Specification

Application Mashup GE は、その性質が異なるために組み合わせることができない
2つの別々の API を提供します。
[Widget API](https://github.com/Wirecloud/wirecloud/tree/develop/docs/widgetapi/widgetapi.md)
は JavaScript API であり、Application Mashup API (このドキュメントの主題) はRESTful
なものです。

Application Mashup API は、HTTP を介してアクセスされる RESTful なリソース指向の
API であり、情報交換にさまざまな表現を使用します。この API は、ワークスペースを
作成および変更する機能と、これらのワークスペースを構築するためにApplication Mashup
サーバで使用可能なリソースを管理する機能を提供します。

このドキュメントでは、FIWARE Application Mashup GE のリファレンス実装である
WireCloud を使用してテストできるいくつかの例も示しています。

## 編集者

  + Álvaro Arranz, Universidad Politécnica de Madrid

## 謝辞

編集者は、この仕様に積極的に貢献してくれた以下の人々に感謝の意を表します:
Aitor Magan and Francisco de la Vega

## ステータス

これは進行中の作業であり、日々変化しています。 最新の利用可能なバージョンを
確認することができます :
https://github.com/Wirecloud/wirecloud/tree/develop
コメントは[wirecloud@conwet.com](mailto:wirecloud@conwet.com) に送ってください。

## Copyright

Copyright © 2012-2017 by Universidad Politécnica de Madrid

## License

この仕様書は
[FIWARE Open Specification License (implicit patents license)](https://forge.fiware.org/plugins/mediawiki/wiki/fiware/index.php/FI-WARE_Open_Specification_Legal_Notice_%28implicit_patents_license%29)
の下でライセンスされています

## 認証

Application Mashup API に対する各 HTTP リクエストには、特定の認証資格情報を含める
必要があります。この API の特定の実装は、複数の認証方式 (OAuth, Basic Auth, Token)
をサポートし、GE を実装する特定のプロバイダによって決定されます。この API に対して
認証するための最善の方法を決定するには、プロバイダに連絡してください。
認証スキームによっては、API が SSL over HTTP (HTTPS)
を使用して動作することを必要とする場合があります。

WireCloud は `Cookie` と`OAuth2` 認証をサポートしています。
これは FIWARE Lab のデフォルトの`OAuth2` です。

## 表現フォーマット

Application Mashup API は、あらゆる種類のリソースを提供するために少なくとも
JSON をサポートしなければなりません。それはまた単純なテキスト、XML および HTML
のような他のフォーマットをサポートするかもしれません。リクエスト・フォーマットは
`Content-Type` ヘッダを使って指定され、リクエスト・ボディを持つオペレーションには
必須です。レスポンス・フォーマットは `Accept` ヘッダを使ってリクエストで指定する
ことができます。リクエストとは異なるフォーマットを使用してレスポンスをシリアル化
することが可能です。

## 同期障害 (Synchronous Faults)

エラー・レスポンスはリクエストの `Accept` ヘッダを基にして最も適切なcontent-type
を使ってエンコードされます。いずれにせよ、レスポンスはエンドユーザに表示するために
`description` 属性を通して、人間が読めるメッセージを提供するでしょう。サーバが
エラーに関する追加の詳細を提供できる場合、それらは `details`
属性を通して提供されます。

JSON の例:

```
{
    "description": "Missing dependencies",
    "details": {
       "missingDependencies": [
           "Wirecloud/nonavailable-operator/1.0",
           "Wirecloud/nonavailable-widget/1.0"
       ]
    }
}
```

XML の例:

```
<?xml version="1.0" encoding="UTF-8"?>
<error>
   <description>Missing dependencies</description>
   <details>
       <missingDependencies>
           <element>Wirecloud/nonavailable-operator/1.0</element>
           <element>Wirecloud/nonavailable-widget/1.0</element>
       </missingDependencies>
   </details>
</error>
```

## HTTP 動詞

可能であれば、この API は各アクションに適切な HTTP 動詞を使用するよう努めます。

| 動詞      | 説明                                                                 |
|-----------|----------------------------------------------------------------------|
| `HEAD`    | GET レスポンスに関連付けられた HTTPヘッダ 情報だけを取得するために、任意のリソースに対して発行できます |
| `GET`     | リソースを取得するために使用されます                                 |
| `POST`    | リソースを作成するために使用されます                                 |
| `PUT`     | リソースを置き換えるために使用されます                               |
| `DELETE`  | リソースを削除するために使用されます                                 |
| `PATCH`   | 部分的な JSON データでリソースを更新するために使用されます (`application/json-patch+json` MIME タイプを使用)。たとえば、Workspace リソースにはいくつかの属性があります。`PATCH` リクエストは、リソースを更新するために１つまたは複数の属性を受け入れることができます。`PATCH` は比較的新しく珍しい  HTTP 動詞なので、リソース・エンドポイントは、` POST` リクエストも受け付けます |

`GET` メソッドをサポートするすべての API エンドポイントは` HEAD` メソッドもサポートしなければなりません。

## 使用されている HTTP ステータスコード

| HTTP コード | タイプ                   | 説明                                                                              |
|-------------|--------------------------|-----------------------------------------------------------------------------------|
|    200      |                       OK | リクエストは正常に処理され、応答メッセージで送信されました                        |
|    201      |                  Created | リクエストは満たされ、新しいリソースが作成されました                              |
|    204      |               No Content | サーバはリクエストを正常に処理しましたが、コンテンツを返しませんでした           |
|    304      |             Not Modified | 最後のリクエスト以降にリソースが変更されていないことを示します。通常、HTTP クライアントは `If-Modified-Since` ヘッダのようなヘッダを提供して比較する時間を提供します。この機能を使用すると、サーバによって再処理されるページ全体と比較してヘッダ・データのみを送受信し、次にサーバのより多くの帯域幅を使用して再度送信する必要があるため、サーバ側とクライアント側の両方で帯域幅と再処理を節約できます |
|    400      |              Bad Request | 構文が正しくないため、リクエストを満たすことができませんでした                   |
|    401      |             Unauthorised | リクエストにはユーザ認証が必要です。リクエストに既に認証資格情報が含まれている場合、401 レスポンスは、認証がそれらの資格情報に対して拒否されたことを示します |
|    403      |                Forbidden | サーバはリクエストを理解しましたが、リクエストされたアクションを実行する権限がユーザにないため、それを実行することを拒否しています |
|    404      |                Not Found | リクエストされたリソースは見つかりませんでしたが、将来再び使用可能になる可能性があります。クライアントによるその後のリクエストは許容されます |
|    405      |       Method Not Allowed | Request-Line で指定されたメソッドは、Request-URI によって識別されたリソースには使用できません|
|    406      |           Not Acceptable | リクエストによって識別されたリソースは、リクエストで送信された受け入れヘッダに従って受け入れられないコンテンツ特性を持つレスポンス・エンティティのみを生成できます |
|    409      |                 Conflict | 既に取得済みの名前など、リクエストの競合が原因でリクエストを処理できなかったことを示します |
|    413      | Request Entity Too Large | リクエストが、サーバが処理しようとしている、または、処理できるよりも大きいです   |
|    415      |   Unsupported Media Type | リクエストのエンティティが、リクエストされたメソッドのリクエストされたリソースでサポートされていない形式であるため、サーバはリクエストの処理を拒否しています |
|    422      |     Unprocessable Entity | リクエストは整形式 (well-formed) でしたが、意味上の誤りのために従うことができませんでした|
|    500      |    Internal Server Error | 他の特定のメッセージが適切でない場合に返される一般的なエラーメッセージ  |

# グループ コア

## サポートされている機能 [/api/features]

### サポートされているすべての機能をリスト [GET]

**使用されているステータスコード**: 200, 304, 406

> **注意**: このアクションはいかなる認証メカニズムによっても保護されるべきではありません

+ Request

    + Headers

            Accept: application/json

+ Response 200

    + Body

            {
                "FIWARE": "5.2.1",
                "Wirecloud": "0.9.0",
                "ObjectStorage": "0.5",
                "ApplicationMashup": "1.0",
                "NGSI": "1.0",
                "FullscreenWidget": "0.5",
                "StyledElements": "0.5"
            }

## プラットフォームの設定 [/api/preferences/platform]

### プラットフォームの設定を取得 [GET]

**使用されているステータスコード**: 200, 304, 401, 403, 406

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 200 (application/json)

    + Body

            {
                "language": {
                    "value": "en-gb",
                    "inherit": false
                }
            }

### プラットフォームの設定を更新 [POST]

**使用されているステータスコード**: 204, 400, 401, 403, 413, 415

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "language": {
                    "value": "browser"
                }
            }

+ Response 204

# グループ ワークスペースの管理

## ワークスペースコレクション [/api/workspaces]

### ワークスペースをリスト [GET]

ユーザが利用できるすべてのワークスペースをリストします。ユーザの資格情報を
含めずにリクエストが行われた場合、このアクションは
すべてのパブリック・ワークスペースを返します。

このアクションは、
[ワークスペースの詳細を取得](#reference/managing-workspaces/workspace/get-workspace-details)
のアクションによって返されたフィールドのサブセットを返します。
具体的には、この API は以下のフィールドを返します: `description`,
`id`, `lastmodified`, `longdescription`, `name`, `owner`, `removable` and `shared`.

**使用されているステータスコード**: 200, 304, 401, 406

+ Request List available workspaces

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            [
                {
                    "description": "My dashboard",
                    "id": "1",
                    "lastmodified": 1464187437041,
                    "longdescription": "",
                    "name": "workspace",
                    "owner": "user",
                    "removable": true,
                    "shared": false,
                    "title": "Workspace"
                },
                {
                    "description": "A public dashboard",
                    "id": "20",
                    "lastmodified": 1461673370860,
                    "longdescription": "A dashboard description using **Markdown** _Syntax_",
                    "name": "public-workspace",
                    "owner": "otheruser",
                    "removable": false,
                    "shared": true,
                    "title": "Public Workspace"
                }
            ]

+ Request List public workspaces

    + Headers

            Accept: application/json

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            [
                {
                    "description": "A public dashboard",
                    "id": "20",
                    "lastmodified": 1461673370860,
                    "longdescription": "A dashboard description using **Markdown** _Syntax_",
                    "name": "public-workspace",
                    "owner": "otheruser",
                    "removable": false,
                    "shared": true,
                    "title": "Public Workspace"
                }
            ]

### 新しいワークスペースを作成 [POST]

新しいワークスペースを作成します。このワークスペースは空になるか、
テンプレートから作成されるか、または使用されたパラメーターに応じて、
既存のワークスペースを複製して作成されます。

これらのパラメータは、選択された表現形式 (例 : `JSON`)
を使ってリクエストのボディで送信されるべきです。

+ `mashup` (文字列) : ワークスペースを作成するためのベースとして使う
   マッシュアップの ID。このオプションは `workspace` と同時には使えません
+ `workspace` (文字列) : 新しいワークスペースを作成するためのベースとして
  使うワークスペースの ID。このオプションは `mashup` と同時には使えません
+ `name` (文字列) : 新しいワークスペースの ID。 `mashup` か `workspace`
  が使われている場合、このパラメータはオプションです。そのような場合、
  `name` パラメータは参照されているマッシュアップまたはワークスペースから
  取得されます。`title` が提供されている場合、このパラメータもオプションです。
  この場合、`title` パラメータの URL バージョンが `name` として使用されます。
  このパラメータは、現在、任意の文字 ('/' を除く) をサポートしますが、
  このパラメータは URL で使用されるため、英数字 (小文字), ダッシュ ('-'),
  および下線 ('_') のみを使用することをお勧めします。さらに、API
  の将来のバージョンではこれを強制する予定です
+ `title` (文字列) : 新しいワークスペースのタイトル。このパラメータは
  オプションです。`mashup` または `workspace` が使われている場合、
  `title` パラメータは参照されているマッシュアップまたはワークスペースから
  取得されます。それ以外の場合は、`name` パラメータを使って埋められます
+ `allow_renaming` (boolean; デフォルト : `false`) : `false` の場合、
  現在使われている名前を使ってワークスペースを作成しようとしても 
  ステータスコード `409` で、失敗します。このパラメータが `true` で名前が
  既に使われている場合、指定された名前をベースとして新しい名前が計算されます

全て上手くいってワークスペースが作成されると、このアクションは
[ワークスペースの詳細を取得](#reference/managing-workspaces/workspace/get-workspace-details)
アクションで使用されたのと同じフォーマットを使用して初期ワークスペースの
詳細を返します。

**使用されているステータスコード**: 201, 400, 401, 403, 406, 409, 413, 415, 422

+ Request Empty workspace (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "name": "test"
            }

+ Response 201 (application/json)

    + Body

            {
                "description": "",
                "empty_params": [],
                "extra_prefs": {},
                "id": "81",
                "lastmodified": 1464187437041,
                "longdescription": "",
                "name": "test",
                "owner": "admin",
                "preferences": {
                    "public": {"value": "true", "inherit": false}
                },
                "removable": true,
                "shared": false,
                "tabs": [
                    {
                        "visible": true,
                        "iwidgets": [],
                        "id": "84",
                        "name": "tab",
                        "preferences": {},
                        "title": "Tab"
                    }
                ],
                "title": "test",
                "users": [],
                "wiring": {"operators": {}, "connections": []}
            }


+ Request Workspace from mashup (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "mashup": "UPM/Mashup/1.0"
            }

+ Response 201 (application/json)

    + Body

            {
                "description": "",
                "empty_params": [],
                "extra_prefs": {},
                "id": "50",
                "lastmodified": 1464187437041,
                "longdescription": "",
                "name": "example",
                "owner": "admin",
                "preferences": {},
                "removable": true,
                "shared": false,
                "tabs": [
                    {
                        "visible": true,
                        "iwidgets": [
                            {
                                "widget": "UPM/Widget1/0.1",
                                "layout": 0,
                                "title": "Widget1",
                                "icon_top": -1,
                                "variables": {},
                                "minimized": false,
                                "id": "311",
                                "height": 28,
                                "zIndex": 0,
                                "width": 6,
                                "readOnly": false,
                                "icon_left": -1,
                                "top": 0,
                                "fulldragboard": false,
                                "left": 0
                            },
                            {
                                "widget": "UPM/Widget2/0.1",
                                "layout": 0,
                                "title": "Widget2",
                                "icon_top": -1,
                                "variables": {},
                                "minimized": false,
                                "id": "312",
                                "height": 28,
                                "zIndex": 0,
                                "width": 6,
                                "readOnly": false,
                                "icon_left": -1,
                                "top": 0,
                                "fulldragboard": false,
                                "left": 7
                            }
                        ],
                        "id": "100",
                        "name": "tab",
                        "preferences": {},
                        "title": "Tab"
                    }
                ],
                "title": "Example",
                "users": [],
                "wiring": {"operators": {}, "connections": []},
            }


+ Request Workspace from inexistent mashup (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "mashup": "UPM/inexistent-mashup/1.0"
            }

+ Response 422 (application/json)

    + Body

            {
                "description": "Mashup not found: UPM/inexistent-mashup/1.0"
            }


+ Request Workspace using an invalid mashup id (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "mashup": "invalid id"
            }

+ Response 422 (application/json)

    + Body

            {
                "description": "invalid mashup id"
            }


+ Request Duplicating a workspace (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "workspace": "81"
            }

+ Response 201 (application/json)

    + Body

            {
                "description": "",
                "empty_params": [],
                "extra_prefs": {},
                "id": "200",
                "lastmodified": 1464207200516,
                "longdescription": "",
                "name": "example",
                "owner": "admin",
                "preferences": {},
                "removable": true,
                "shared": false,
                "tabs": [
                    {
                        "visible": true,
                        "iwidgets": [
                            {
                                "widget": "UPM/Widget1/0.1",
                                "layout": 0,
                                "title": "Widget1",
                                "icon_top": -1,
                                "variables": {},
                                "minimized": false,
                                "id": "313",
                                "height": 28,
                                "zIndex": 0,
                                "width": 6,
                                "readOnly": false,
                                "icon_left": -1,
                                "top": 0,
                                "fulldragboard": false,
                                "left": 0
                            },
                            {
                                "widget": "UPM/Widget2/0.1",
                                "layout": 0,
                                "title": "Widget2",
                                "icon_top": -1,
                                "variables": {},
                                "minimized": false,
                                "id": "314",
                                "height": 28,
                                "zIndex": 0,
                                "width": 6,
                                "readOnly": false,
                                "icon_left": -1,
                                "top": 0,
                                "fulldragboard": false,
                                "left": 7
                            }
                        ],
                        "id": "101",
                        "name": "tab",
                        "preferences": {},
                        "name": "Tab"
                    }
                ],
                "title": "Example",
                "users": [],
                "wiring": {"operators": {}, "connections": []}
            }

## ワークスペース[/api/workspace/{workspace_id}]

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID

### ワークスペースの詳細を取得 [GET]

返されるフィールド :

- `id` (文字列) : ワークスペースの Id
- `owner` (文字列) : ワークスペースの所有者のユーザ名
- `name` (文字列)  : ワークスペースの名前
- `title` (文字列, WireCloud 1.1 以降/ FIWARE Application Mashup RESTful
  Specification v2.2 以降で利用可能) : ワークスペースのタイトル
- `description` (文字列, WireCloud 1.0 以降/ FIWARE Application Mashup RESTful
  Specification v2.1 以降で利用可能) : ワークスペースを説明するプレーン・テキスト
  の簡単な説明
- `longdescription` (文字列, WireCloud 1.0 以降/ FIWARE Application Mashup
  RESTful Specification v2.1 以降で利用可能) : このワークスペースを説明する
  テキスト。このフィールドは Markdown を使ってフォーマットできます
- `preferences` (オブジェクト)  : 設定値
- `lastmodified` (数値)  : このワークスペースが最後に更新された時刻を示す
  Unix タイムスタンプ
- `tabs` (配列)  : ワークスペースの視覚的な説明
- `wires` (オブジェクト)  : ワークスペースのワイヤリング構成。このフィールドの
  構造について詳しくは、
  [Update workspace wiring configuration](reference/managing-workspaces/workspace/update-workspace-wiring-configuration)
  アクション資料を参照してください
- `ovable` (オブジェクト)  : 現在のユーザがこのワークスペースを削除できるか
  どうかを示します
- `users` (オブジェクト)  : このワークスペースにアクセスできるユーザとグループの
  リスト
- `shared` (ブール値)  : このワークスペースが他のユーザまたはグループと
  共有されているかどうかを示します

**使用されているステータスコード**: 200, 401, 403, 404, 406

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN


+ Response 200

    + Body

            {
                "description": "",
                "empty_params": [],
                "extra_prefs": {},
                "id": 81,
                "lastmodified": 1464207200516,
                "longdescription": "A dashboard description using **Markdown** _Syntax_",
                "name": "test",
                "owner": "admin",
                "preferences": {},
                "removable": true,
                "shared": false,
                "tabs": [
                    {
                        "visible": true,
                        "iwidgets": [],
                        "id": 84,
                        "name": "tab",
                        "preferences": {},
                        "title": "Tab"
                    }
                ],
                "title": "Test",
                "users": [
                    {
                        "accesslevel": "read",
                        "fullname": "Full Name"
                        "organization": false,
                        "username": "test"
                    },
                    {
                        "accesslevel": "read",
                        "fullname": "WireCloud"
                        "organization": true,
                        "username": "wirecloud"
                    }
                ],
                "wiring": {"operators": {}, "connections": []}
            }

### ワークスペースの詳細を更新 [POST]

変更可能なワークスペース属性 :

- `name` (文字列) : ワークスペースの名前 このパラメーターは現在任意の文字
  ('/' を除く) をサポートしますが、このパラメーターは URL で使用されるため、
  英数字 (小文字)、ダッシュ ('-')、および下線 ('_')のみを使用することを
  お勧めします。さらに、API の将来のバージョンではこれを強制する予定です
- `title` (文字列, WireCloud 1.1 以降 / FIWARE Application Mashup RESTful
  Specification v2.2 以降で利用可能) : ワークスペースのタイトル
- `description` (文字列, WireCloud 1.0 以降/ FIWARE Application Mashup
  RESTful Specification v2.1 以降で利用可能) : ワークスペースを説明する
  プレーンテキストの短い説明
- `longdescription` (文字列, WireCloud 1.0 以降/ FIWARE Application Mashup
  RESTful Specification v2.1 以降で利用可能) : このワークスペースを説明する
  テキスト。このフィールドは Markdown を使ってフォーマットできます

**使用されているステータスコード**: 204, 400, 401, 403, 404, 415

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "title": "New Name",
                "name": "new-name",
                "longdescription": "A dashboard description using **Markdown** _Syntax_"
            }

+ Response 204

+ Response 403

    + Body

            {
                "description": "You are not allowed to update this workspace"
            }

### ワークスペースの設定を更新 [POST /api/workspace/{workspace_id}/preferences]

**使用されているステータスコード**: 204, 400, 401, 403, 404, 413, 415

> **注意**: サポートされている設定は、Application Mashup インスタンスで有効になっている拡張機能によって異なります

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "public": {"value": "true"}
            }

+ Response 204


### ワークスペースのワイヤリング構成のパッチ [PATCH /api/workspace/{workspace_id}/wiring]

- `version` (文字列) : このワイヤリング設定で使われているフォーマットの
  バージョン。現時点で利用可能な唯一のバージョンは  "2.0" です
- `operator` (オブジェクト) : このワイヤリング記述で使われているオペレータの説明
- `connections` (配列) : ウィジェットとオペレータの間で確立した接続
- `visualdescription` (オブジェクト) : 視覚的な説明。 このワイヤリング構成を
  ユーザ・インターフェイスに表示するために使用されます

**使用されているステータスコード**: 204, 400, 401, 403, 404, 413, 422

> *WireCloud 1.1 / FIWARE Application Mashup RESTful Specification v2.2 の新機能*

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID

+ Request Replace a preference and add an operator (application/json-patch+json)

    + Headers

            Accept: application/json-patch+json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body
            [
                {
                    "op": "replace",
                    "path": "/operators/1/preferences/preferenceName/value",
                    "value": "newPreferenceValue",
                },
                {
                    "op": "add",
                    "path": "/operators/0/",
                    "value": {
                        "name": "UPM/Operator/0.1",
                        "id": "0"
                    },
                }
            ]

+ Response 204

+ Request Remove operator

    + Headers

            Accept: application/json-patch+json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body
            [
                {
                    "op": "remove",
                    "path": "/operators/1",
                }
            ]

+ Response 204



### ワークスペースのワイヤリング設定を更新 [PUT /api/workspace/{workspace_id}/wiring]

- `version` (文字列) : このワイヤリング設定で使われているフォーマットのバージョン。現時点で利用可能な唯一のバージョンは "2.0" です
- `operator` (オブジェクト) : このワイヤリング記述で使われているオペレータの説明
- `connections` (配列) : ウィジェットとオペレータの間で確立した接続
- `visualdescription` (オブジェクト) : 視覚的な説明。このワイヤリング構成をユーザ・インターフェイスに表示するために使用されます

**使用されているステータスコード**: 204, 400, 401, 403, 404, 413, 422

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
               "operators":{
                    "0": {
                        "name": "UPM/Operator/0.1",
                        "id": "0"
                    }
               },
               "connections": [
                    {
                        "source":{
                            "type": "iwidget",
                            "id": 311,
                            "endpoint": "location_info_event"
                        },
                        "target":{
                            "type": "iwidget",
                            "id": 312,
                            "endpoint": "search_text_slot"
                        }
                    },
                    {
                        "source": {
                            "type": "iwidget",
                            "id": 311,
                            "endpoint": "location_info_event"
                        },
                        "target":{
                            "type": "ioperator",
                            "id": 0,
                            "endpoint": "message"
                     }
                  }
               ]
            }

+ Response 204

### ワークスペースを削除 [DELETE]

**使用されているステータスコード**: 204, 401, 403, 404

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 204

### 新しいタブを追加 new tabs [POST /api/worksace/{workspace_id}/tabs]

新しい空のタブを作成します。このリクエストは、選択された表現形式 (例えば JSON)
を使用してリクエストのボディにタブを作成するために使用される `name` または
`title` パラメータを提供しなければなりません。

**使用されているステータスコード**: 201, 400, 401, 403, 404, 406, 413, 415, 422

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "title": "Tab 2"
            }

+ Response 201 (application/json)

    + Body

            {
               "id": "3",
               "iwidgets": [],
               "name": "tab-2",
               "preferences": {},
               "title": "Tab 2",
               "visible": false
            }

## タブ [/api/workspace/{workspace_id}/tab/{tab_id}]

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID
    + tab_id: 100 (number) - タブの ID

### タブの詳細を取得 [GET]


返されるフィールド : 

- `id` (文字列) : タブの ID
- `name` (文字列) : タブの名前
- `title` (文字列, WireCloud 1.1 以降 / FIWARE Application Mashup RESTful
  Specification v2.2 以降で利用可能) : タブのタイトル
- `visible` (ブール値)  : これがワークスペースをロードするときにデフォルトで
  表示するタブかどうかを示します
- `iwidgets` (配列)  : このタブに関連したウィジェットのリスト
- `preferences` (オブジェクト)  : 設定値

**使用されているステータスコード**: 200, 401, 403, 404, 406, 413, 415, 422

> *WireCloud 1.0 / FIWARE Application Mashup RESTful Specification v2.1 の新機能*

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN


+ Response 200

    + Body

            {
                "id": "84",
                "iwidgets": [
                    {
                        "widget": "UPM/Widget1/0.1",
                        "layout": 0,
                        "title": "Widget1",
                        "icon_top": -1,
                        "variables": {},
                        "minimized": false,
                        "id": "313",
                        "height": 28,
                        "zIndex": 0,
                        "width": 6,
                        "readOnly": false,
                        "icon_left": -1,
                        "top": 0,
                        "fulldragboard": false,
                        "left": 0
                    },
                    {
                        "widget": "UPM/Widget2/0.1",
                        "layout": 0,
                        "title": "Widget2",
                        "icon_top": -1,
                        "variables": {},
                        "minimized": false,
                        "id": "314",
                        "height": 28,
                        "zIndex": 0,
                        "width": 6,
                        "readOnly": false,
                        "icon_left": -1,
                        "top": 0,
                        "fulldragboard": false,
                        "left": 7
                    }
                ],
                "name": "Tab",
                "preferences": {},
                "title": "tab",
                "visible": true
            }

### タブの詳細を更新 [POST]

変更可能なタブ属性 : 

- `name` (文字列) : このタブを識別するために使う名前。このパラメータは現在任意の
  文字 ('/' を除く) をサポートしますが、このパラメーターは URL で使用されるため、
  英数字 (小文字), ダッシュ ('-') および下線 ('_') のみを使用することを
  お勧めします。さらに、API の将来のバージョンではこれを強制する予定です
- `title` (文字列, WireCloud 1.1 以降/ FIWARE Application Mashup RESTful
  Specification v2.2以降で利用可能) : ユーザ・インターフェースに表示するラベル
- `visible` (ブール値)  : これをワークスペースの初期/デフォルトタブにする場合は
  `true`

**使用されているステータスコード**: 204, 400, 401, 403, 404, 409, 413, 415, 422

> **注意**: 1.0 より前のWireCloud バージョンは、`POST` リクエストを使う代わりに `PUT` リクエストを使うことによってこのエンドポイントを誤って実装しました

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "name": "new-name",
                "title": "New Name"
            }

+ Response 204

### タブの設定を更新 [POST /api/workspace/{workspace_id}/tab/{tab_id}/preferences]

**使用されているステータスコード**: 204, 400, 401, 403, 404, 413, 415

> **注意**: サポートされている設定は、Application Mashup インスタンスで有効になっている拡張機能によって異なります

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID
    + tab_id: 100 (number) - タブの ID

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "baselayout": {
                    "inherit": false,
                    "value": "{\"verticalmargin\":3,\"smart\":\"false\",\"horizontalmargin\":4,\"type\":\"gridlayout\",\"columns\":20,\"cellheight\":12,\"rows\":12}"
                }
            }

+ Response 204

### タブを削除 [DELETE]

**使用されているステータスコード**: 204, 401, 403, 404

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 204

### 新しいウィジェットを追加 [POST /api/workspace/{workspace_id}/tab/{tab_id}/iwidgets]

ワークスペース/タブにウィジェットを追加します。このリクエストは以下のパラメータを
サポートしています。これは選択された表現形式、例えば JSON を使用してリクエストの
ボディで送信されるべきです :

+ `widget` (文字列) : インスタンス化するウィジェットの ID (ベンダ/名前/バージョン)
+ `title` (オプション, 文字列) : ウィジェットのタイトル。提供されていない場合、
  ウィジェットのタイトルはウィジェットの説明 (`config.xml`) から取得されます

**使用されているステータスコード**: 201, 400, 401, 403, 404, 406, 413, 415, 422

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID
    + tab_id: 100 (number) - タブの ID

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "widget": "UPM/Widget/1.0"
            }

+ Response 201

    + Body

            {
               "widget": "UPM/Widget/1.0",
               "left": 12,
               "top": 0,
               "icon_left": -1,
               "icon_top": -1,
               "zIndex": 2,
               "width": 6,
               "height": 28,
               "title": "Widget's Title",
               "layout": 0
            }

## ウィジェットをインスタンス化 [/api/workspace/{workspace_id}/tab/{tab_id}/iwidget/{iwidget_id}]

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID
    + tab_id: 100 (number) - タブの ID
    + iwidget_id: 101 (number) - インスタンス化されたウィジェットの ID

### インスタンス化されたウィジェットの詳細を更新 [POST]

インスタンス化されたウィジェットの属性を更新します。リクエストで参照されている
属性だけが更新され、他の属性はそのまま残ります。 変更可能な属性は次のとおりです。

- `title` (文字列) : ウィジェットのタイトル
- `tab` (文字列) : ウィジェットがホストされるタブの ID。ウィジェットは、
  同じワークスペースのタブ間でのみ移動できます
- `width` (数値) : レイアウト列内のウィジェットの幅
- `height` (数値) : レイアウト行におけるウィジェットの高さ
- `top` (数値) : レイアウト行におけるウィジェットの垂直位置
- `left` (数値) : レイアウト列内のウィジェットの水平位置
- `zIndex` (数値) : ウィジェットのスタック順

**使用されているステータスコード**: 204, 400, 401, 403, 404, 413, 415, 422

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "title": "new title"
            }

+ Response 204

### インスタンス化されたウィジェットの設定を取得 [GET /api/workspace/{workspace_id}/tab/{tab_id}/iwidget/{iwidget_id}/preferences]

> *WireCloud 1.1 / FIWARE Application Mashup RESTful Specification v2.2 の新機能*

**使用されているステータスコード**: 200, 304, 401, 403

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID
    + tab_id: 100 (number) - タブの ID
    + iwidget_id: 101 (number) - インスタンス化されたウィジェットの ID

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 200 (application/json)

    + Body

            {
                "first_preference_name": {
                    "readonly": false,
                    "hidden": false,
                    "name": "boolean",
                    "value": false,
                    "secure": false
                },
                "second_preference_nanme": {
                    "readonly": false,
                    "hidden": false,
                    "name": "text",
                    "value": "initial text",
                    "secure": false
                }
            }


### インスタンス化されたウィジェットの設定を更新 [POST /api/workspace/{workspace_id}/tab/{tab_id}/iwidget/{iwidget_id}/preferences]

**使用されているステータスコード**: 204, 400, 401, 403, 404, 413, 415

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID
    + tab_id: 100 (number) - タブの ID
    + iwidget_id: 101 (number) - インスタンス化されたウィジェットの ID

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "pref": "value"
            }

+ Response 204

### インスタンス化されたウィジェットのプロパティを更新 [GET /api/workspace/{workspace_id}/tab/{tab_id}/iwidget/{iwidget_id}/properties]

> *WireCloud 1.1 / FIWARE Application Mashup RESTful Specification v2.2 の新機能*

**使用されているステータスコード**: 200, 304, 401, 403

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID
    + tab_id: 100 (number) - タブの ID
    + iwidget_id: 101 (number) - インスタンス化されたウィジェットの ID

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 200 (application/json)

    + Body

            {
                "first_property_name": {
                    "readonly": false,
                    "hidden": false,
                    "name": "boolean",
                    "value": false,
                    "secure": false
                },
                "second_property_nanme":
                {
                    "readonly": false,
                    "hidden": false,
                    "name": "text",
                    "value": "initial text",
                    "secure": false
                }
            }


### インスタンス化されたウィジェットの設定を更新 [POST /api/workspace/{workspace_id}/tab/{tab_id}/iwidget/{iwidget_id}/properties]

**使用されているステータスコード**: 204, 400, 401, 403, 404, 413, 415

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID
    + tab_id: 100 (number) - タブの ID
    + iwidget_id: 101 (number) - インスタンス化されたウィジェットの ID

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            {
                "property_name": "new_value"
            }

+ Response 204

### インスタンス化されたウィジェットを削除 [DELETE]

**使用されているステータスコード**: 204, 401, 403, 404

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 204

## オペレータ変数 [/api/workspace/{workspace_id}/operators/{operator_id}/variables]

+ Parameters

    + workspace_id: 81 (number) - ワークスペースの ID
    + operator_id: 101 (number) - オペレータの ID

### オペレータ変数を取得 [GET]

> *WireCloud 1.1 / FIWARE Application Mashup RESTful Specification v2.2 の新機能*

**使用されているステータスコード**: 200, 304, 401, 403

+ Request
    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 200 (application/json)

    + Body

            {
                "preferences": {
                    "username":
                    {
                        "hidden": false,
                        "name": "username",
                        "readonly": false,
                        "secure": false,
                        "value": "test_username"
                    },
                    "password":
                    {
                        "hidden": false,
                        "name": "password",
                        "readonly": false,
                        "secure": true,
                        "value": "********"
                    }
                }
            }

# グループ・マッピング・リソース

## リソース・コレクション [/api/resources]

### 利用可能なマッシュアップ・アプリケーション・コンポーネントをリスト [GET]

**使用されているステータスコード**: 200, 401, 406

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 200 (application/json)

    + Body

            {
               "CoNWeT/multimedia-viewer/0.5": {
                    "type": "widget",
                    "vendor": "CoNWeT",
                    "name": "multimedia-viewer"
                    "version": "0.5",
                    "description": "This widget allows watch youtube videos, flickr images and another images.",
                    "preferences": [
                        {
                            "default": "http://orion.lab.fiware.org:1026/",
                            "description": "URL of the Orion Context Broker to use for retrieving entity information"
                            "label": "NGSI server URL"
                            "name": "ngsi_server"
                            "readonly": false
                            "secure": false
                            "type": "text"
                            "value": null
                        }
                    ],
                    "wiring": {
                        "inputs": [],
                        "outputs": []
                    }
               },
               "UPM/Operator/1.0": {
                    "type": "operator",
                    "vendor": "UPM",
                    "name": "Operator"
                    "version": "1.0",
                    "description": "Example operator",
                    "preferences": [],
                    "wiring": {
                        "inputs": [],
                        "outputs": []
                    }
               }
            }

### マッシュアップ・アプリケーション・コンポーネントをアップロード [POST]


このリクエストはバイナリ・コンテンツを扱うので、リクエストはリクエスト自身のために
以下の追加の `Content-Types` をサポートするべきです :
`application/octect-stream` と `multipart/form-data`

**使用されているステータスコード**: 204, 401, 403, 404, 406, 409, 413, 415

+ Request (application/octet-stream)

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

    + Body

            ‹Binary data (Not supported on APIary)›

+ Response 201 (application/json)

    + Body

            {
                "contributors": [],
                "image": "https://mashup.lab.fiware.org/catalogue/media/Wirecloud/Test/1.0/images/catalogue.png",
                "type": "widget",
                "smartphoneimage": "https://mashup.lab.fiware.org/catalogue/media/Wirecloud/Test/1.0/images/catalogue_iphone.png",
                "contents": {
                    "src": "https://mashup.lab.fiware.org/catalogue/media/Wirecloud/Test/1.0/test.html",
                    "charset": "utf-8",
                    "contenttype": "text/html",
                    "cacheable": true,
                    "useplatformstyle": false
                },
                "requirements": [],
                "preferences": [
                    {
                        "secure": false,
                        "description": "list preference",
                        "default": "default",
                        "value": null,
                        "label": "list",
                        "readonly": false,
                        "type": "list",
                        "options": [
                            {
                                "value": "default",
                                "label": "Default"
                            },
                            {
                                "value": "1",
                                "label": "value1"
                            },
                            {
                                "value": "2",
                                "label": "value2"
                            }
                        ],
                        "name": "list"
                    },
                    {
                        "secure": false,
                        "description": "text preference",
                        "default": "initial text",
                        "value": null,
                        "label": "text",
                        "readonly": false,
                        "type": "text",
                        "name": "text"
                    },
                    {
                        "secure": false,
                        "description": "boolean preference",
                        "default": "false",
                        "value": null,
                        "label": "boolean",
                        "readonly": false,
                        "type": "boolean",
                        "name": "boolean"
                    },
                    {
                        "secure": false,
                        "description": "password preference",
                        "default": "default",
                        "value": null,
                        "label": "password",
                        "readonly": false,
                        "type": "password",
                        "name": "password"
                    },
                    {
                        "secure": false,
                        "description": "number preference",
                        "default": "2",
                        "value": null,
                        "label": "number",
                        "readonly": false,
                        "type": "number",
                        "name": "number"
                    }
                ],
                "title": "Test",
                "wiring": {
                    "inputs": [
                        {
                            "friendcode": "test-data",
                            "name": "inputendpoint",
                            "actionlabel": "",
                            "label": "Input",
                            "type": "text",
                            "description": ""
                        },
                        {
                            "friendcode": "nothandled",
                            "name": "nothandled",
                            "actionlabel": "",
                            "label": "Not handled endpoint",
                            "type": "text",
                            "description": ""
                        }
                    ],
                    "outputs": [
                        {
                            "description": "",
                            "type": "text",
                            "friendcode": "test-data",
                            "name": "outputendpoint",
                            "label": "Output"
                        }
                    ]
                },
                "longdescription": "DESCRIPTION.md",
                "version": "1.0",
                "widget_height": "24",
                "homepage": "",
                "email": "aarranz@conwet.com",
                "default_lang": "en",
                "issuetracker": "",
                "vendor": "Wirecloud",
                "description": "This widget is used to test some of the features of the Wirecloud platform",
                "authors": [
                    {
                        "name": "aarranz"
                    }
                ],
                "properties": [],
                "altcontents": [],
                "name": "Test",
                "license": "",
                "changelog": "CHANGELOG.md",
                "doc": "https://mashup.lab.fiware.org/catalogue/media/Wirecloud/Test/1.0/doc/index.md",
                "licenseurl": "",
                "widget_width": "6"
            }

+ Response 400 (application/json)

    + Body

            {
                "description": "The uploaded file is not a zip file"
            }

+ Request Multipart (multipart/form-data; boundary=----WebKitFormBoundaryHPwaOXLATyUcGQp8)

    + Body

            ------WebKitFormBoundaryHPwaOXLATyUcGQp8
            Content-Disposition: form-data; name="file"; filename="Wirecloud_Test_1.0.wgt"
            Content-Type: application/octet-stream
            
            ‹Base64 data›
            
            ------WebKitFormBoundaryHPwaOXLATyUcGQp8--

+ Response 201 (application/json)

    + Body

            {
                "contributors": [],
                "image": "https://mashup.lab.fiware.org/catalogue/media/Wirecloud/Test/1.0/images/catalogue.png",
                "type": "widget",
                "smartphoneimage": "https://mashup.lab.fiware.org/catalogue/media/Wirecloud/Test/1.0/images/catalogue_iphone.png",
                "contents": {
                    "src": "https://mashup.lab.fiware.org/catalogue/media/Wirecloud/Test/1.0/test.html",
                    "charset": "utf-8",
                    "contenttype": "text/html",
                    "cacheable": true,
                    "useplatformstyle": false
                },
                "requirements": [],
                "preferences": [
                    {
                        "secure": false,
                        "description": "list preference",
                        "default": "default",
                        "value": null,
                        "label": "list",
                        "readonly": false,
                        "type": "list",
                        "options": [
                            {
                                "value": "default",
                                "label": "Default"
                            },
                            {
                                "value": "1",
                                "label": "value1"
                            },
                            {
                                "value": "2",
                                "label": "value2"
                            }
                        ],
                        "name": "list"
                    },
                    {
                        "secure": false,
                        "description": "text preference",
                        "default": "initial text",
                        "value": null,
                        "label": "text",
                        "readonly": false,
                        "type": "text",
                        "name": "text"
                    },
                    {
                        "secure": false,
                        "description": "boolean preference",
                        "default": "false",
                        "value": null,
                        "label": "boolean",
                        "readonly": false,
                        "type": "boolean",
                        "name": "boolean"
                    },
                    {
                        "secure": false,
                        "description": "password preference",
                        "default": "default",
                        "value": null,
                        "label": "password",
                        "readonly": false,
                        "type": "password",
                        "name": "password"
                    },
                    {
                        "secure": false,
                        "description": "number preference",
                        "default": "2",
                        "value": null,
                        "label": "number",
                        "readonly": false,
                        "type": "number",
                        "name": "number"
                    }
                ],
                "title": "Test",
                "wiring": {
                    "inputs": [
                        {
                            "friendcode": "test-data",
                            "name": "inputendpoint",
                            "actionlabel": "",
                            "label": "Input",
                            "type": "text",
                            "description": ""
                        },
                        {
                            "friendcode": "nothandled",
                            "name": "nothandled",
                            "actionlabel": "",
                            "label": "Not handled endpoint",
                            "type": "text",
                            "description": ""
                        }
                    ],
                    "outputs": [
                        {
                            "description": "",
                            "type": "text",
                            "friendcode": "test-data",
                            "name": "outputendpoint",
                            "label": "Output"
                        }
                    ]
                },
                "longdescription": "DESCRIPTION.md",
                "version": "1.0",
                "widget_height": "24",
                "homepage": "",
                "email": "aarranz@conwet.com",
                "default_lang": "en",
                "issuetracker": "",
                "vendor": "Wirecloud",
                "description": "This widget is used to test some of the features of the Wirecloud platform",
                "authors": [
                    {
                        "name": "aarranz"
                    }
                ],
                "properties": [],
                "altcontents": [],
                "name": "Test",
                "license": "",
                "changelog": "CHANGELOG.md",
                "doc": "https://mashup.lab.fiware.org/catalogue/media/Wirecloud/Test/1.0/doc/index.md",
                "licenseurl": "",
                "widget_width": "6"
            }

+ Response 204

## リソース [/api/resource/{vendor}/{name}/{version}]

+ Parameters

    + vendor: Wirecloud (string) -  ID of the Mashable Application Component
    + name: Test (string) - Name ID of the Mashable Application Component
    + version: 0.9 (string) - Version of the Mashable Application Component

### マッシュアップ・アプリケーション・コンポーネントをエクスポート [GET]

**使用されているステータスコード**: 200, 401, 403, 404, 406

+ Request

    + Headers

            Accept: */*
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 200 (application/octet-stream)

    + Body

            ‹Binary data (Not supported on APIary)›


### マッシュアップ・アプリケーション・コンポーネントのすべてのバージョンをアンインストール [DELETE /api/resource/{vendor}/{name}]

**使用されているステータスコード**: 204, 401, 403, 404

+ Parameters

    + vendor: Wirecloud (string) -  ID of the Mashable Application Component
    + name: Test (string) - Name ID of the Mashable Application Component

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 204

### マッシュアップ・アプリケーション・コンポーネントをアンインストール [DELETE]

**使用されているステータスコード**: 204, 401, 403, 404

+ Request

    + Headers

            Accept: application/json
            Authorization: Bearer YOUR_OAUTH2_TOKEN

+ Response 204
